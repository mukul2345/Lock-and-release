/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ERC20, ERC20Interface } from "../ERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000dec38038062000dec83398101604081905262000034916200018a565b600362000042838262000307565b50600462000051828262000307565b505050620003d7565b634e487b7160e01b600052604160045260246000fd5b601f19601f83011681018181106001600160401b03821117156200009857620000986200005a565b6040525050565b6000620000ab60405190565b9050620000b9828262000070565b919050565b60006001600160401b03821115620000da57620000da6200005a565b601f19601f83011660200192915050565b60005b8381101562000108578181015183820152602001620000ee565b50506000910152565b6000620001286200012284620000be565b6200009f565b905082815260208101848484011115620001455762000145600080fd5b62000152848285620000eb565b509392505050565b600082601f830112620001705762000170600080fd5b81516200018284826020860162000111565b949350505050565b60008060408385031215620001a257620001a2600080fd5b82516001600160401b03811115620001bd57620001bd600080fd5b620001cb858286016200015a565b92505060208301516001600160401b03811115620001ec57620001ec600080fd5b620001fa858286016200015a565b9150509250929050565b634e487b7160e01b600052602260045260246000fd5b6002810460018216806200022f57607f821691505b60208210810362000244576200024462000204565b50919050565b60006200025b620002588381565b90565b92915050565b6200026c836200024a565b81546008840282811b60001990911b908116901990911617825550505050565b60006200029b81848462000261565b505050565b81811015620002bf57620002b66000826200028c565b600101620002a0565b5050565b601f8211156200029b576000818152602090206020601f85010481016020851015620002ec5750805b620003006020601f860104830182620002a0565b5050505050565b81516001600160401b038111156200032357620003236200005a565b6200032f82546200021a565b6200033c828285620002c3565b6020601f8311600181146200037357600084156200035a5750858201515b600019600886021c1981166002860217865550620003cf565b600085815260208120601f198616915b82811015620003a5578885015182556020948501946001909201910162000383565b86831015620003c25784890151600019601f89166008021c191682555b6001600288020188555050505b505050505050565b610a0580620003e76000396000f3fe608060405234801561001057600080fd5b50600436106100b95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610173578063a9059cbb14610186578063dd62ed3e1461019957600080fd5b8063395093511461012f57806370a082311461014257806395d89b411461016b57600080fd5b806306fdde03146100be578063095ea7b3146100dc57806318160ddd146100fc57806323b872dd1461010d578063313ce56714610120575b600080fd5b6100c66101d2565b6040516100d391906105b7565b60405180910390f35b6100ef6100ea366004610613565b610264565b6040516100d3919061065a565b6002545b6040516100d3919061066e565b6100ef61011b36600461067c565b61027e565b60126040516100d391906106d5565b6100ef61013d366004610613565b6102a2565b6101006101503660046106e3565b6001600160a01b031660009081526020819052604090205490565b6100c66102e1565b6100ef610181366004610613565b6102f0565b6100ef610194366004610613565b61034d565b6101006101a736600461070c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546101e190610755565b80601f016020809104026020016040519081016040528092919081815260200182805461020d90610755565b801561025a5780601f1061022f5761010080835404028352916020019161025a565b820191906000526020600020905b81548152906001019060200180831161023d57829003601f168201915b5050505050905090565b60003361027281858561035b565b60019150505b92915050565b60003361028c85828561040f565b610297858585610471565b506001949350505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490919061027290829086906102dc908790610797565b61035b565b6060600480546101e190610755565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909190838110156103405760405162461bcd60e51b8152600401610337906107ef565b60405180910390fd5b610297828686840361035b565b600033610272818585610471565b6001600160a01b0383166103815760405162461bcd60e51b815260040161033790610840565b6001600160a01b0382166103a75760405162461bcd60e51b81526004016103379061088f565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061040290859061066e565b60405180910390a3505050565b6001600160a01b03838116600090815260016020908152604080832093861683529290522054600019811461046b578181101561045e5760405162461bcd60e51b81526004016103379061089f565b61046b848484840361035b565b50505050565b6001600160a01b0383166104975760405162461bcd60e51b81526004016103379061091c565b6001600160a01b0382166104bd5760405162461bcd60e51b81526004016103379061096c565b6001600160a01b038316600090815260208190526040902054818110156104f65760405162461bcd60e51b8152600401610337906109bf565b6001600160a01b0380851660008181526020819052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061055490869061066e565b60405180910390a361046b565b60005b8381101561057c578181015183820152602001610564565b50506000910152565b600061058f825190565b8084526020840193506105a6818560208601610561565b601f01601f19169290920192915050565b602080825281016105c88184610585565b9392505050565b60006001600160a01b038216610278565b6105e9816105cf565b81146105f457600080fd5b50565b8035610278816105e0565b806105e9565b803561027881610602565b6000806040838503121561062957610629600080fd5b600061063585856105f7565b925050602061064685828601610608565b9150509250929050565b8015155b82525050565b602081016102788284610650565b80610654565b602081016102788284610668565b60008060006060848603121561069457610694600080fd5b60006106a086866105f7565b93505060206106b1868287016105f7565b92505060406106c286828701610608565b9150509250925092565b60ff8116610654565b6020810161027882846106cc565b6000602082840312156106f8576106f8600080fd5b600061070484846105f7565b949350505050565b6000806040838503121561072257610722600080fd5b600061072e85856105f7565b9250506020610646858286016105f7565b634e487b7160e01b600052602260045260246000fd5b60028104600182168061076957607f821691505b60208210810361077b5761077b61073f565b50919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561027857610278610781565b602581526000602082017f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77815264207a65726f60d81b602082015291505b5060400190565b60208082528101610278816107aa565b602481526000602082017f45524332303a20617070726f76652066726f6d20746865207a65726f206164648152637265737360e01b602082015291506107e8565b60208082528101610278816107ff565b602281526000602082017f45524332303a20617070726f766520746f20746865207a65726f206164647265815261737360f01b602082015291506107e8565b6020808252810161027881610850565b6020808252810161027881601d81527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000602082015260400190565b602581526000602082017f45524332303a207472616e736665722066726f6d20746865207a65726f206164815264647265737360d81b602082015291506107e8565b60208082528101610278816108da565b602381526000602082017f45524332303a207472616e7366657220746f20746865207a65726f206164647281526265737360e81b602082015291506107e8565b602080825281016102788161092c565b602681526000602082017f45524332303a207472616e7366657220616d6f756e7420657863656564732062815265616c616e636560d01b602082015291506107e8565b602080825281016102788161097c56fea26469706673582212208f66eb4250dab5ddc92f322b8aa83dd63faa316f334bc2608e07d3d81e984abf64736f6c63430008110033";

export class ERC20__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC20> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC20>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC20 {
    return super.attach(address) as ERC20;
  }
  connect(signer: Signer): ERC20__factory {
    return super.connect(signer) as ERC20__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20Interface {
    return new utils.Interface(_abi) as ERC20Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC20 {
    return new Contract(address, _abi, signerOrProvider) as ERC20;
  }
}
